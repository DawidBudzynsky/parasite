//Multiple functions with multiple aspects, one (logAddMinus) is attached to both add and minus function
//and (logSum) function is only attached to add function

add(a: int, b: int) int {
    return a + b
}

minus(a: int, b: int) int {
    return a - b
}

aspect logAddMinus(add, minus){
    before{
        print("====function " + function.name + " called====")
        print("called with args:")
        for arg in function.args{
            print("name: " + arg.name + ", value: " + arg.value->str)
        }
    }
    after{
        print("function result: " + function.result->str)
        print("====function " + function.name + " ended====")
    }
}

aspect logSum(add){
    after{
        print("logSum aspect res: " + function.result->str)
        print("")
    }
}

main(){
    int var1 = 5
    int var2 = 2
    add(var1, var2)
    minus(var1, var2)
}

// should return:
//
// ====function add called====
// called with args:
// name: a, value: 5
// name: b, value: 2
// function result: 7
// ====function add ended====
// logSum aspect res: 7
//
// ====function minus called====
// called with args:
// name: a, value: 5
// name: b, value: 2
// function result: 3
// ====function minus ended====
